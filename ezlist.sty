%%% Guide

% This package provides a single macro, \*, for making lists.
%
% Example usage:
%
% \* hello
% \* world
% \** use multiple * for sublists
% \** like this
% \* back to top level
% \* use a / to end the list
% \*/
%
% Can also use an optional argument to use numbers/letters, e.g.
%
% \*[(a)] labeled (a)
% \* labeled (b)
% \** no label in this sublist
% \* labeled (c)
% \**[(i)] labeled (i)
% \** labeled (ii)
% \*/
%
% More generally, use [] to pass any options the enumitem package supports.
%
% Optional feature: explicit start/end:
%
% - Explicit start: use \*[...], \**[...], etc. with no text after.
%   - Should be followed by another \*, \**, etc.
%   - This is useful if you want to pass options in a separate line
% - Explicit end: use \**/, \***/, etc.
%   - This lets you have a sublist in the middle of an item
%
% Example:
%
% \*[(a), beginpenalty=10000]
% \* this is the first item, labeled (a)
% \** the list options got their own line
% \* this one is (b), and there's a sublist
% \**[beginpenalty=10000]
% \** with
% \** some
% \** stuff
% \**/ but now we resume item (b) from the outer list
% \* before finally going to (c)
% \* more details about explicit begin
% \** you need to pass options with [] for an explicit begin
% \***
% \*** so the line immediately above this appears
% \** but passing an empty list of options counts as passing options, so
% \***[]
% \*** so the line immediately above this is omitted
% \** edge case: when an explicit begin is immediately followed by an explicit end\dots
% \***[]
% \***/ \dots\ the list has a single empty item
% \*/


%%% Package setup and options

\NeedsTeXFormat{LaTeX2e}[1994/06/01]
\ProvidesPackage{ezlist}[2023/12/29 Easy Lists]

\RequirePackage{etoolbox}
\RequirePackage{kvoptions}

% If enumitem is not already loaded, load it with or without shortlabels?
\DeclareBoolOption[true]{shortlabels}

% Add cleveref names? ("" for \cref, "Item"/"Items" for \Cref)
\DeclareBoolOption[false]{cleveref}
\@ifpackageloaded{cleveref}{\ezlist@clevereftrue}{}

\ProcessLocalKeyvalOptions*


%%% Required packages

\ifbool{ezlist@shortlabels}{
  \PassOptionsToPackage{shortlabels}{enumitem}
}{}
\RequirePackage{enumitem}
\ifbool{ezlist@cleveref}{
  \RequirePackage{cleveref}
}{}

%%% Implementation of \*

% Keep \* as it is in math mode
\let\ezlist@oldstar\*
\protected\def\*{\ifbool{mmode}{\ezlist@oldstar}{\ezlist@item}}

\newlist{ezlist@env}{enumerate}{8}
\setlist[ezlist@env,1]{label=\labelitemi}
\setlist[ezlist@env,2]{label=\labelitemii}
\setlist[ezlist@env,3]{label=\labelitemiii}
\setlist[ezlist@env,4]{label=\labelitemiv}
\setlist[ezlist@env,5]{label=\labelitemi}
\setlist[ezlist@env,6]{label=\labelitemii}
\setlist[ezlist@env,7]{label=\labelitemiii}
\setlist[ezlist@env,8]{label=\labelitemiv}

\newcounter{ezlist@prev}
\setcounter{ezlist@prev}{0}

\newcounter{ezlist@this}
\setcounter{ezlist@this}{1}

\newcounter{ezlist@diff}
\setcounter{ezlist@diff}{0}

\newtoggle{ezlist@prevempty}
\togglefalse{ezlist@prevempty}

% Main entry point called directly by \*
% Starts by counting "*"s
\newcommand{\ezlist@item}{%
  \@ifstar{\ezlist@star}{\ezlist@nostar}%
}

\newcommand{\ezlist@star}{%
  \addtocounter{ezlist@this}{1}%
  \ezlist@item%
}

\newcommand{\ezlist@nostar}{%
  \def\ezlist@type{{ezlist@env}}%
  \ifnumcomp{\value{ezlist@this}}{>}{\value{ezlist@prev}}{%
    \@ifnextchar{[}{%
      % This a new sublist with parameters, so store them in \ezlist@type
      \ezlist@settype
    }{%
      % This a new sublist, but without parameters
      \ezlist@checkend%
    }%
  }{%
    % This not a new sublist
    \ezlist@checkend%
  }%
}

% Start a new sublist with parameters
\def\ezlist@settype[#1]{%
  \def\ezlist@type{{ezlist@env}[#1]}%
  \ezlist@checkempty{}%
}

% Check if the first line of a new sublist with parameters is empty
% If it is, then we omit the \item
% #1 is either blank or \par
\newcommand{\ezlist@checkempty}[1]{%
  \@ifnextchar{\par}{%
    \ezlist@checkemptypar{#1}%
  }{%
    \@ifnextchar{\*}{%
      \ezlist@go{\toggletrue{ezlist@prevempty}}{}{#1}%
    }{%
      \ezlist@go{}{\item}{#1}%
    }%
  }%
}

\def\ezlist@checkemptypar#1\par{%
  \ezlist@checkempty{#1\par}%
}

% Check for /, which indicates the end of a list
\newcommand{\ezlist@checkend}{%
  \@ifnextchar{/}{%
    % We want to end a list, but is there actually a list to end?
    \ifnumcomp{\value{ezlist@this}}{>}{\value{ezlist@prev}}{%
      % There is not, so issue a warning and ignore this line
      \PackageWarning{ezlist}{attempted to end easy list at too high a level}{}%
      \setcounter{ezlist@this}{1}%
      \@gobble%
    }{%
      % There is, so end the list without adding an \item
      \addtocounter{ezlist@this}{-1}%
      \ezlist@go{}{}{\@gobble}%
    }
  }{%
    % We're not ending a list
    \ezlist@go{}{\item}{}%
  }%
}

% #1 goes before the potential \item
% #2 is the potential \item: it's either blank or \item
% #3 goes after the potential \item
\newcommand{\ezlist@go}[3]{%
  \defcounter{ezlist@diff}{\value{ezlist@this} - \value{ezlist@prev}}%
  \ifboolexpr{%
    togl {ezlist@prevempty}
    and not test {\ifnumcomp{\value{ezlist@diff}}{=}{0}}
  }{%
    % We're about to end a list without any \item, so add one
    \item%
  }{}
  % Begin any necessary lists
  \whileboolexpr{ test {\ifnumcomp{\value{ezlist@diff}}{>}{1}} }{%
    \addtocounter{ezlist@diff}{-1}%
    \begin{ezlist@env}%
    \item%
  }%
  % Apply any parameters to the innermost new list
  \ifnumcomp{\value{ezlist@diff}}{=}{1}{%
    \addtocounter{ezlist@diff}{-1}%
    \expandafter\begin\ezlist@type%
  }{}%
  % End any necessary lists
  \whileboolexpr{ test {\ifnumcomp{\value{ezlist@diff}}{<}{0}} }{%
    \addtocounter{ezlist@diff}{1}%
    \end{ezlist@env}%
  }%
  \ifnumcomp{\value{ezlist@this}}{=}{0}{%
    \ezlist@cleanup#1#3%
  }{%
    \ezlist@cleanup#1#2#3%
  }%
}

\newcommand{\ezlist@cleanup}{%
  \setcounter{ezlist@prev}{\value{ezlist@this}}%
  \setcounter{ezlist@this}{1}%
  \togglefalse{ezlist@prevempty}%
}


% Cleveref names

\ifbool{ezlist@cleveref}{
  \newcommand{\ezlist@cCrefname}[1]{%
    \crefname{#1}{}{}%
    \Crefname{#1}{Item}{Items}%
  }
  \ezlist@cCrefname{ezlist@envi}
  \ezlist@cCrefname{ezlist@envii}
  \ezlist@cCrefname{ezlist@enviii}
  \ezlist@cCrefname{ezlist@enviv}
  \ezlist@cCrefname{ezlist@envv}
  \ezlist@cCrefname{ezlist@envvi}
  \ezlist@cCrefname{ezlist@envvii}
  \ezlist@cCrefname{ezlist@envviii}
}{}
