%%% Guide

% This package makes \[ and \] a (slightly) smarter equation interface
% - Automatically chooses between equation, align, and gather
%   - Conservative choice based on seeing whether & or \\ appears in the text
% - Automatically numbers only labeled equations, if desired
% - If using \tag, put it right after \label, as in \label{...} \tag{...}
% - If an \allowdisplaybreaks appears, then allows page breaks at newlines
%   - The optional argument of \allowdisplaybreaks is not supported
%   - As a reminder, LaTeX provies \\* for non-breakable newlines
%
% There are two numbering modes, each corresponding to an option and a command
% - "number labeled", \ezeqSetNumberLabeled: only number lines with a \label
% - "number all", \ezeqSetNumberAll: number every line

%%% Package setup and options

\NeedsTeXFormat{LaTeX2e}[1994/06/01]
\ProvidesPackage{ezeq}[2023/12/30 Easy Equations]

\RequirePackage{amsmath}
\RequirePackage{etoolbox}
\RequirePackage{kvoptions}
\RequirePackage{xstring}

% Number only labeled equations, or number labeled equations?
\DeclareBoolOption[true]{numberlabeled}
\DeclareComplementaryOption{numberall}{numberlabeled}

% What are equations numbered within?
\DeclareStringOption[]{numberwithin}

% Is cleveref loaded? (Or will it be loaded later?)
\DeclareBoolOption[false]{cleveref}
\@ifpackageloaded{cleveref}{\ezeq@clevereftrue}{}

\ProcessLocalKeyvalOptions*


%%% Implementation of \[ \] when numbering every line

\newcommand{\ezeqSetNumberAll}{%
  \def\[##1\]{%
    \begingroup%
    \saveexpandmode\noexpandarg
    \IfSubStr{##1}{\allowdisplaybreaks}{\allowdisplaybreaks}{}%
    \IfSubStr{##1}{&}{\restoreexpandmode\begin{align}##1\end{align}}{%
      \IfSubStr{##1}{\\}{\restoreexpandmode\begin{gather}##1\end{gather}}{%
        \restoreexpandmode\begin{equation}##1\end{equation}}}%
    \endgroup%
    \ignorespaces%
  }
}


%%% Implementation of \[ \] when numbering only labeled lines

\ifbool{ezeq@cleveref}{
  \RequirePackage{cleveref}
  \newcommand{\ezeq@labelMacroName}{cref@old@label@in@display}
}{
  \newcommand{\ezeq@labelMacroName}{label@in@display}
}

\AtBeginDocument{%
  \letcs\ezeq@old@label@in@display{\ezeq@labelMacroName}%
}

\newcommand{\ezeq@label@in@display}[1]{%
  \ezeq@old@label@in@display{#1}%
  \@ifnextchar{\tag}{}{\yesnumber}%
}

\newcommand{\ezeqSetNumberLabeled}{%
  \def\[##1\]{%
    \begingroup%
    \cslet{\ezeq@labelMacroName}\ezeq@label@in@display%
    \saveexpandmode\noexpandarg
    \IfSubStr{##1}{\allowdisplaybreaks}{\allowdisplaybreaks}{}%
    \IfSubStr{##1}{&}{\restoreexpandmode\begin{align*}##1\end{align*}}{%
      \IfSubStr{##1}{\\}{\restoreexpandmode\begin{gather*}##1\end{gather*}}{%
        \restoreexpandmode\begin{equation*}##1\end{equation*}}}%
    \endgroup%
    \ignorespaces%
  }
}


%%% Implement \yesnumber without cleveref compatibility

\newcommand{\ezeq@yesnumberNoCleveref}{%
  \refstepcounter{equation}%
  \tag{\theequation}%
}


%%% Implement \yesnumber without cleveref compatibility

% See https://tex.stackexchange.com/questions/545726/labelcref-doesnt-like-my-user-defined-command

\ifdefempty{\ezeq@numberwithin}{
  \newcommand{\ezeq@cref@format}{%
    [equation][\theequation][]%
  }
}{
  \numberwithin{equation}{\ezeq@numberwithin}
  \newcommand{\ezeq@cref@format}{%
    [equation][\arabic{equation}][\csuse{the\ezeq@numberwithin}]%
  }
}

\newcommand*{\ezeq@make@df@tag@@}[1]{%
  \cref@old@make@df@tag@@{#1}%
  \let\ezeq@old@df@tag\df@tag
  \expandafter\gdef\expandafter\df@tag\expandafter{%
    \ezeq@old@df@tag
    \def\cref@currentlabel{\ezeq@cref@format#1}%
  }%
}

\newcommand*{\ezeq@make@df@tag@@@}[1]{%
  \cref@old@make@df@tag@@@{#1}%
  \let\ezeq@old@df@tag\df@tag
  \expandafter\gdef\expandafter\df@tag\expandafter{%
    \ezeq@old@df@tag
    \toks@\@xp{\p@equation{#1}}%
    \edef\cref@currentlabel{\ezeq@cref@format\the\toks@}%
  }%
}

\newcommand{\ezeq@yesnumberCleveref}{%
  \refstepcounter{equation}%
  \begingroup%
    \let\make@df@tag@@\ezeq@make@df@tag@@
    \let\make@df@tag@@@\ezeq@make@df@tag@@@
  \tag{\theequation}%
  \endgroup%
}


%%% Define macros to their apprpriate versions

\ifbool{ezeq@numberlabeled}{
  \ezeqSetNumberLabeled
}{
  \ezeqSetNumberAll
}

\ifbool{ezeq@cleveref}{
  \let\yesnumber\ezeq@yesnumberCleveref
}{
  \let\yesnumber\ezeq@yesnumberNoCleveref
}
